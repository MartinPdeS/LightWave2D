
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/detector/source_detector.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_detector_source_detector.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_detector_source_detector.py:


Source-Detector
===============

This example demonstrates the setup and execution of a source-detector experiment using LightWave2D.
We will define the simulation grid, add a lens scatterer, a point source, and a point detector, apply a perfectly matched layer (PML), run the simulation, and visualize the results.

.. GENERATED FROM PYTHON SOURCE LINES 10-11

Importing the necessary packages

.. GENERATED FROM PYTHON SOURCE LINES 11-17

.. code-block:: Python

    from TypedUnit import ureg
    from MPSPlots import colormaps

    from LightWave2D.grid import Grid
    from LightWave2D.experiment import Experiment








.. GENERATED FROM PYTHON SOURCE LINES 18-19

Define the simulation grid

.. GENERATED FROM PYTHON SOURCE LINES 19-29

.. code-block:: Python

    grid = Grid(
        resolution=0.1 * ureg.micrometer,
        size_x=60 * ureg.micrometer,
        size_y=30 * ureg.micrometer,
        n_steps=300,
    )

    # Initialize the experiment with the defined grid
    experiment = Experiment(grid=grid)








.. GENERATED FROM PYTHON SOURCE LINES 30-31

Add a lens scatterer to the experiment

.. GENERATED FROM PYTHON SOURCE LINES 31-38

.. code-block:: Python

    scatterer = experiment.add_lense(
        position=("35%", "50%"),  # Center position of the lens
        epsilon_r=2,  # Relative permittivity of the lens
        curvature=10 * ureg.micrometer,
        width=5 * ureg.micrometer,
    )








.. GENERATED FROM PYTHON SOURCE LINES 39-40

Add a point source to the experiment

.. GENERATED FROM PYTHON SOURCE LINES 40-46

.. code-block:: Python

    source = experiment.add_point_source(
        wavelength=[1310] * ureg.nanometer,
        position=("10%", "50%"),  # Position of the source
        amplitude=10e10,  # Amplitude of the source
    )








.. GENERATED FROM PYTHON SOURCE LINES 47-48

Add a point detector to the experiment

.. GENERATED FROM PYTHON SOURCE LINES 48-52

.. code-block:: Python

    detector = experiment.add_point_detector(
        position=("40%", "50%")  # Position of the detector
    )








.. GENERATED FROM PYTHON SOURCE LINES 53-54

Add a perfectly matched layer (PML) to absorb boundary reflections

.. GENERATED FROM PYTHON SOURCE LINES 54-60

.. code-block:: Python

    experiment.add_pml(
        order=1,  # Order of the PML polynomial profile
        width="10%",  # Width of the PML region as a percentage of grid size
        sigma_max=5000 * (ureg.siemens / ureg.meter),  # Maximum conductivity for the PML
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    PML(grid=Grid(resolution=<Quantity(0.1, 'micrometer')>, size_x=<Quantity(60, 'micrometer')>, size_y=<Quantity(30, 'micrometer')>, n_steps=300), width='10%', sigma_max=<Quantity(5000, 'siemens / meter')>, order=1)



.. GENERATED FROM PYTHON SOURCE LINES 61-62

Plot the entire experiment setup

.. GENERATED FROM PYTHON SOURCE LINES 62-70

.. code-block:: Python

    experiment.plot()

    # Run the FDTD simulation
    experiment.run()

    # Plot the field measured at the detector
    detector.plot_data()




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /gallery/detector/images/sphx_glr_source_detector_001.png
         :alt: Fiber structure
         :srcset: /gallery/detector/images/sphx_glr_source_detector_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /gallery/detector/images/sphx_glr_source_detector_002.png
         :alt: source detector
         :srcset: /gallery/detector/images/sphx_glr_source_detector_002.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <Figure size 800x400 with 1 Axes>



.. GENERATED FROM PYTHON SOURCE LINES 71-72

Plot the last time frame of the computed fields

.. GENERATED FROM PYTHON SOURCE LINES 72-78

.. code-block:: Python

    experiment.plot_frame(
        frame_number=-1,  # Plot the last frame
        enhance_contrast=3,  # Maximum scale for the field visualization
        colormap=colormaps.polytechnique.red_black_blue,  # Colormap for the plot
    )




.. image-sg:: /gallery/detector/images/sphx_glr_source_detector_003.png
   :alt: source detector
   :srcset: /gallery/detector/images/sphx_glr_source_detector_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <Figure size 800x500 with 2 Axes>



.. GENERATED FROM PYTHON SOURCE LINES 79-80

Render an animation of the field propagation over time

.. GENERATED FROM PYTHON SOURCE LINES 80-87

.. code-block:: Python

    animation = experiment.render_propagation(
        skip_frame=5,  # Number of frames to skip in the animation
        colormap=colormaps.polytechnique.red_black_blue,  # Colormap for the animation
        enhance_contrast=4,  # Enhance contrast for better visualization
        save_as="./detector.gif",  # Save the animation as a GIF file
        fps=30,
    )



.. image-sg:: /gallery/detector/images/sphx_glr_source_detector_004.png
   :alt: source detector
   :srcset: /gallery/detector/images/sphx_glr_source_detector_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    MovieWriter Pillow unavailable; using Pillow instead.





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 12.252 seconds)


.. _sphx_glr_download_gallery_detector_source_detector.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: source_detector.ipynb <source_detector.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: source_detector.py <source_detector.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: source_detector.zip <source_detector.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
