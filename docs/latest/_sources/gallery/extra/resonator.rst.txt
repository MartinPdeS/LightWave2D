
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/extra/resonator.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_extra_resonator.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_extra_resonator.py:


Ring Resonator
==============

This example demonstrates the setup and execution of a ring resonator experiment using LightWave2D.
We will define the simulation grid, add a ring resonator scatterer, a point source, apply a perfectly matched layer (PML), run the simulation, and visualize the results.

.. GENERATED FROM PYTHON SOURCE LINES 10-11

Importing the necessary packages

.. GENERATED FROM PYTHON SOURCE LINES 11-17

.. code-block:: Python

    from TypedUnit import ureg
    from MPSPlots.colormaps import polytechnique

    from LightWave2D.grid import Grid
    from LightWave2D.experiment import Experiment








.. GENERATED FROM PYTHON SOURCE LINES 18-19

Define the simulation grid

.. GENERATED FROM PYTHON SOURCE LINES 19-29

.. code-block:: Python

    grid = Grid(
        resolution=0.1 * ureg.micrometer,  # Grid resolution in meters
        size_x=50 * ureg.micrometer,  # Grid size in the x direction in meters
        size_y=30 * ureg.micrometer,  # Grid size in the y direction in meters
        n_steps=200,  # Number of time steps for the simulation
    )

    # Initialize the experiment with the defined grid
    experiment = Experiment(grid=grid)








.. GENERATED FROM PYTHON SOURCE LINES 30-31

Add a ring resonator scatterer to the experiment

.. GENERATED FROM PYTHON SOURCE LINES 31-39

.. code-block:: Python

    ring_resonator = experiment.add_ring_resonator(
        position=("50%", "49%"),  # Center position of the ring resonator
        epsilon_r=2.0,  # Relative permittivity of the ring resonator
        inner_radius=4 * ureg.micrometer,  # Inner radius of the ring resonator in meters
        width=2 * ureg.micrometer,  # Width of the ring resonator in meters
    )









.. GENERATED FROM PYTHON SOURCE LINES 40-41

Add a waveguide to the experiment

.. GENERATED FROM PYTHON SOURCE LINES 41-48

.. code-block:: Python

    ring_resonator = experiment.add_waveguide(
        position_0=("0%", "25%"),  # Center position of the ring resonator
        position_1=("100%", "25%"),  # Center position of the ring resonator
        epsilon_r=2,  # Relative permittivity of the ring resonator
        width=2 * ureg.micrometer,  # Width of the ring resonator in meters
    )








.. GENERATED FROM PYTHON SOURCE LINES 49-50

Add a point source to the experiment

.. GENERATED FROM PYTHON SOURCE LINES 50-57

.. code-block:: Python

    source = experiment.add_line_source(
        wavelength=2110 * ureg.nanometer,  # Wavelength of the source in meters
        position_0=("10%", "23%"),  # Center position of the ring resonator
        position_1=("10%", "27%"),  # Center position of the ring resonator
        amplitude=100,  # Amplitude of the source
    )








.. GENERATED FROM PYTHON SOURCE LINES 58-59

Add a perfectly matched layer (PML) to absorb boundary reflections

.. GENERATED FROM PYTHON SOURCE LINES 59-65

.. code-block:: Python

    pml = experiment.add_pml(
        order=1,  # Order of the PML polynomial profile
        width="10%",  # Width of the PML region as a percentage of grid size
        sigma_max=5000 * ureg.siemens / ureg.meter,  # Maximum conductivity for the PML
    )








.. GENERATED FROM PYTHON SOURCE LINES 66-67

Plot the experiment layout

.. GENERATED FROM PYTHON SOURCE LINES 67-73

.. code-block:: Python

    experiment.plot()


    # Run the FDTD simulation
    experiment.run()




.. image-sg:: /gallery/extra/images/sphx_glr_resonator_001.png
   :alt: Fiber structure
   :srcset: /gallery/extra/images/sphx_glr_resonator_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 74-75

Plot the last time frame of the computed fields

.. GENERATED FROM PYTHON SOURCE LINES 75-80

.. code-block:: Python

    experiment.plot_frame(
        frame_number=-1,  # Plot the last frame
        enhance_contrast=2,  # Maximum scale for the field visualization
    )




.. image-sg:: /gallery/extra/images/sphx_glr_resonator_002.png
   :alt: resonator
   :srcset: /gallery/extra/images/sphx_glr_resonator_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <Figure size 800x500 with 2 Axes>



.. GENERATED FROM PYTHON SOURCE LINES 81-82

Render an animation of the field propagation over time

.. GENERATED FROM PYTHON SOURCE LINES 82-89

.. code-block:: Python

    animation = experiment.render_propagation(
        skip_frame=5,  # Number of frames to skip in the animation
        colormap=polytechnique.red_black_blue,  # Colormap for the animation
        enhance_contrast=4,  # Enhance contrast for better visualization
        save_as="./resonator.gif",  # Save the animation as a GIF file
        fps=30,
    )



.. image-sg:: /gallery/extra/images/sphx_glr_resonator_003.png
   :alt: resonator
   :srcset: /gallery/extra/images/sphx_glr_resonator_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    MovieWriter Pillow unavailable; using Pillow instead.





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 7.697 seconds)


.. _sphx_glr_download_gallery_extra_resonator.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: resonator.ipynb <resonator.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: resonator.py <resonator.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: resonator.zip <resonator.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
