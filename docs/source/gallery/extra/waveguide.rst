
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/extra/waveguide.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_gallery_extra_waveguide.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_extra_waveguide.py:


Waveguide
=========

This example demonstrates the setup and execution of a waveguide experiment using LightWave2D.
We will define the simulation grid, add a waveguide and a line source, apply a perfectly matched layer (PML), run the simulation, and visualize the results.

.. GENERATED FROM PYTHON SOURCE LINES 10-11

Importing the necessary packages

.. GENERATED FROM PYTHON SOURCE LINES 11-15

.. code-block:: python3

    from LightWave2D.grid import Grid
    from LightWave2D.experiment import Experiment
    from MPSPlots import colormaps








.. GENERATED FROM PYTHON SOURCE LINES 16-17

Define the simulation grid

.. GENERATED FROM PYTHON SOURCE LINES 17-27

.. code-block:: python3

    grid = Grid(
        resolution=0.1e-6,  # Grid resolution in meters
        size_x=50e-6,        # Grid size in the x direction in meters
        size_y=15e-6,        # Grid size in the y direction in meters
        n_steps=100         # Number of time steps for the simulation
    )

    # Initialize the experiment with the defined grid
    experiment = Experiment(grid=grid)








.. GENERATED FROM PYTHON SOURCE LINES 28-29

Add a waveguide to the experiment

.. GENERATED FROM PYTHON SOURCE LINES 29-44

.. code-block:: python3

    scatterer = experiment.add_waveguide(
        position_0=('0%', '50%'),    # Starting position of the waveguide
        position_1=('100%', '50%'),  # Ending position of the waveguide
        width=2e-6,                  # Width of the waveguide in meters
        epsilon_r=2                  # Relative permittivity of the waveguide
    )

    # Add a line source to the experiment
    source = experiment.add_line_source(
        wavelength=1550e-9,         # Wavelength of the source in meters
        position_0=('20%', '45%'),  # Starting position of the source
        position_1=('20%', '55%'),  # Ending position of the source
        amplitude=10                # Amplitude of the source
    )








.. GENERATED FROM PYTHON SOURCE LINES 45-46

Add a perfectly matched layer (PML) to absorb boundary reflections

.. GENERATED FROM PYTHON SOURCE LINES 46-52

.. code-block:: python3

    experiment.add_pml(
        order=1,          # Order of the PML polynomial profile
        width='10%',      # Width of the PML region as a percentage of grid size
        sigma_max=5000    # Maximum conductivity for the PML
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    PML(grid=Grid(resolution=1e-07, size_x=5e-05, size_y=1.5e-05, n_steps=100), width='10%', sigma_max=5000.0, order=1)



.. GENERATED FROM PYTHON SOURCE LINES 53-54

Run the FDTD simulation

.. GENERATED FROM PYTHON SOURCE LINES 54-56

.. code-block:: python3

    experiment.run_fdtd()








.. GENERATED FROM PYTHON SOURCE LINES 57-58

Plot the experiment layout

.. GENERATED FROM PYTHON SOURCE LINES 58-61

.. code-block:: python3

    experiment.plot()





.. image-sg:: /gallery/extra/images/sphx_glr_waveguide_001.png
   :alt: Fiber structure
   :srcset: /gallery/extra/images/sphx_glr_waveguide_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 62-63

Plot the resulting electric field distribution at a certain time

.. GENERATED FROM PYTHON SOURCE LINES 63-65

.. code-block:: python3

    experiment.plot_frame(frame_number=-1)




.. image-sg:: /gallery/extra/images/sphx_glr_waveguide_002.png
   :alt: Fiber structure
   :srcset: /gallery/extra/images/sphx_glr_waveguide_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 66-67

Render an animation of the wave propagation

.. GENERATED FROM PYTHON SOURCE LINES 67-75

.. code-block:: python3

    animation = experiment.render_propagation(
        skip_frame=10,                            # Number of frames to skip in the animation
        colormap=colormaps.polytechnique.red_black_blue,  # Colormap for the animation
        scale_max=2                               # Maximum scale for the field visualization
    )

    # Save the animation as a GIF file
    _ = animation.save('./waveguide_propagation.gif', writer='Pillow', fps=20)



.. image-sg:: /gallery/extra/images/sphx_glr_waveguide_003.png
   :alt: waveguide
   :srcset: /gallery/extra/images/sphx_glr_waveguide_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    MovieWriter Pillow unavailable; using Pillow instead.





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 1.051 seconds)


.. _sphx_glr_download_gallery_extra_waveguide.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: waveguide.py <waveguide.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: waveguide.ipynb <waveguide.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
