[build-system]
requires = ["scikit-build-core>=0.3.3", "pybind11", "setuptools>=64", "setuptools_scm[toml]>=8.0"]
build-backend = "scikit_build_core.build"

[tool.scikit-build]
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"
cmake.verbose = true
editable.verbose = true
logging.level = "INFO"
wheel.exclude = ["LightWave2D/cpp"]
install.strip = false
sdist.include = ["LightWave2D/binary/*"]
sdist.exclude = [
    "tests",
    "docs",
    ".git*",
    "developments",
]

[project]
name = "LightWave2D"
dynamic = ["version"]
description="A package for finite-difference time domain computation for light propagation"
keywords = ["FDTD", "Light", "propagation", "physics"]
documentation = 'https://lightwave2d.readthedocs.io/'
url = 'https://github.com/MartinPdeS/LightWave2D'
platforms = ['unix', 'linux', 'osx']
readme = "README.rst"
requires-python = ">=3.10"
authors = [{ name = "Martin Poinsinet de Sivry-Houle", email = "martin.poinsinet.de.sivry@gmail.com" }]
classifiers = [
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: Implementation :: CPython',
    'Development Status :: 3 - Alpha',
    'Topic :: Scientific/Engineering :: Physics',
    'License :: OSI Approved :: MIT License',
    'Intended Audience :: Science/Research',
]
dependencies = [
    "setuptools_scm[toml]>=8.0",
    'PyOptik',
    'shapely',
    'numpy>=1.12.0',
    'pydantic==2.6.3',
    'opencv-python==4.10.0.84',
    'ffmpeg'
]

[tool.setuptools_scm]
version_file = "LightWave2D/_version.py"
write_to = "LightWave2D/_version.py"
version_scheme = "post-release"
local_scheme = "node-and-date"

[tool.setuptools.packages.find]
where = ["LightWave2D"]

[project.optional-dependencies]
testing = [
    "pytest>=0.6",
    "pytest-cov>=2.0",
    "pytest-json-report==1.5.0",
    "mypy>=0.910",
    "flake8>=3.9",
    "tox>=3.24",
    "coverage==6.5.0"
]

documentation = [
    "numpydoc==1.6.0",
    "sphinx>=5.1.1",
    "sphinx-gallery==0.17.0",
    "sphinx-rtd-theme==2.0.0",
    "pydata-sphinx-theme==0.14.1",
]


[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "-v", '-rw']
xfail_strict = true
log_cli_level = "INFO"
testpaths = ["tests"]

[tool.cibuildwheel]
build-frontend = "build"
build-verbosity = 1
before-test = ""
test-command = "python -m pytest -rA {project}/tests --ignore={project}/tests/gui"
test-extras = ["testing"]

[tool.cibuildwheel.linux]
archs = ["x86_64"]
build = ["cp310-manylinux*", "cp311-manylinux*", "cp312-manylinux*"]
manylinux-x86_64-image = "manylinux2014"
repair-wheel-command = "auditwheel repair -w {dest_dir} {wheel}"

[tool.cibuildwheel.macos]
environment = {MACOSX_DEPLOYMENT_TARGET = "15.0"}
archs = ["arm64"]
build = ["cp310-*", "cp311-*", "cp312-*"]
repair-wheel-command = "delocate-wheel -w {dest_dir} -v {wheel}"

[tool.cibuildwheel.windows]
archs = ["AMD64"]
build = ["cp310-*", "cp311-*", "cp312-*"]